#
# @file Makefile
#
# @section desc File description
#
# Makefile for application blink
# automatically generated by goil on Mon Sep 14 22:55:22 2015
# from root OIL file blink.oil
#
# @section copyright Copyright
#
# Trampoline OS
#
# Trampoline is copyright (c) IRCCyN 2005-2012
# Trampoline is protected by the French intellectual property law.
#
# This software is distributed under the Lesser GNU Public Licence
#
# @section infos File informations
#
# Do not modify directly this file, it can be overwritten by goil
# Instead, you can update your .oil file description.
#
# $Date$
# $Rev$
# $Author$
# $URL$
#
# make          : build application blink
# make doc      : extract both dev and user docs from trampoline sources 
#                 (doxygen and dot required).
# make clean    : remove everything except the Makefile.
# 
# NOTE: dependancies are set by default (to recompile the needed files)
#       if your compiler does not support it (-MF -MD) you can turn it off:
#       use the NODEP symbol, i.e. : make clean NODEP=1
#

#############################################################################
# USER APPLICATION CONFIGURATION
#############################################################################

# Name of the generated executable
# it should be declared as APP_NAME in the OS section of the .oil file.
# if not, it defaults to 'trampoline'
EXEC = blink_exe

# Name of the source OIL file
OIL_FILE = blink.oil

# Source files of the application.
# it should be declared as APP_SRC in the OS section of the .oil file
# (many times allowed).
SOURCES = blink.c

OIL_GENERATED_FILES += tpl_dispatch_table.c
OIL_GENERATED_FILES += tpl_invoque.S

WITH_IOC = false

# Trampoline generation flags
WITH_TRACE = false
WITH_MEMMAP = true
WITH_LINKSCRIPT = true
WITH_MEMORY_PROTECTION = false


# CFLAGS: flags used for the C compilation process
# it should be declared as CFLAGS in the OS section of the .oil file
# (many times allowed).
override CFLAGS += -g -O0 -Wall -Wno-unused-but-set-variable -Wformat -std=c99 -mcpu=cortex-m4 -Wmissing-field-initializers -mthumb -mfloat-abi=soft -mfpu=fpv4-sp-d16 -nostartfiles


# LDFLAGS: flags used for the link process
# it should be declared as LDFLAGS in the OS section of the .oil file
# (many times allowed).
LDFLAGS = --fatal-warnings --warn-common --no-undefined -L/usr/local/dev-arm/i386-Darwin-arm-gcc-4.9.2/lib/gcc/arm-eabi/4.9.2 -lc -L/usr/local/dev-arm/i386-Darwin-arm-gcc-4.9.2/arm-eabi/lib/thumb -lgcc -Map=blink.map

LDFLAGS += -T blink/script.ld
# ASFLAGS: flags used for the assembly process (if required)
# it should be declared as AS_FLAGS in the OS section of the .oil file
# (many times allowed).
ASFLAGS = -g -Wall -mcpu=cortex-m4 -mthumb --fatal-warnings -mfloat-abi=soft -mfpu=fpv4-sp-d16

# Default build directory
BUILD_DIR = build

# Autosar extension
# If 'true', Autosar extension are compiled in (schedule tables, ...)
AUTOSAR = false
AUTOSAR_SC = 0
AUTOSAR_OSAPPLICATIONS = false

# Scheduler
SCHEDULER = osek

#############################################################################
# COMPILER CONFIGURATION
#############################################################################
# Program used to compile files.
# it should be declared as COMPILER in the OS section of the .oil file.
# default is 'gcc'
CC = arm-eabi-gcc

# Program used to link files during compilation process.
# it should be declared as LINKER in the OS section of the .oil file.
# default is 'ld'
LD = arm-eabi-ld

# Program used to link files during compilation process.
# it should be declared as ASSEMBLER in the OS section of the .oil file.
# default is 'gcc'
AS = arm-eabi-as

#############################################################################
# TRAMPOLINE CONFIGURATION
#############################################################################

# Trampoline root path to source code.
# it should be declared as TRAMPOLINE_BASE_PATH
# in the OS section of the .oil file.
TPL_BASE_PATH = ../../../../..

# Target is given in goil command line when generating the Makefile. 
# If you update the target here, it will be taken into account, and 
# a new Makefile will be generated with the new target.
TARGET = thumb2/cortex-m4/stm32f4-discovery
ARCH = thumb2
CHIP = cortex-m4
BOARD = stm32f4-discovery

# WITH_USECOM is true if COM is used
WITH_USECOM = false

# WITH_USEDEBUG is true if DEBUG is used
WITH_USEDEBUG = false

# WITH_SYSTEM_CALL is true when compiling trampoline
# with system call support. It is false otherwise
WITH_SYSTEM_CALL = true

#############################################################################
# OIL COMPILER CONFIGURATION
#############################################################################
# Goil OIL compiler tool configuration.
# If the GOIL_TEMPLATE_PATH is commented, the default template path is used
# (it can be saved in the .profile file).
GOIL_COMPILER = goil
GOIL_TEMPLATE_PATH = ../../../../../goil/templates/

#############################################################################
# DOCUMENTATION GENERATION
#############################################################################
# The doxygen tool is used to extract both user and developpment 
# documentation from the source code. 
# See http://www.stack.nl/~dimitri/doxygen/
# You should also install Graphviz dot tool to build dependancy graph in
# the documentation:
# see http://www.graphviz.org/
DOXYGEN = doxygen

#############################################################################
# TARGET SPECIFIC STUFF
#############################################################################

OIL_GENERATED_FILES += tpl_first_stage_irq.S
OIL_GENERATED_FILES += tpl_second_stage_irq.S
OIL_GENERATED_FILES += tpl_vectors.c

LIBRARY_PATH = $(BOARD_PATH)/StdPeriph_Driver/src

TEMP_SOURCE_DIRS += $(LIBRARY_PATH)

# File format transformation
OBJCOPY = arm-eabi-objcopy
DOWNLOAD = st-flash

# Build binary files
img: $(EXEC)
	$(OBJCOPY) -O ihex $(EXEC) $(EXEC).hex
	$(OBJCOPY) -O binary $(EXEC) $(EXEC).bin

# Flash the STM32F4
burn: $(EXEC).bin
	$(DOWNLOAD) write $(EXEC).bin 0x8000000

EXTRA_FILES_CLEAN += $(EXEC).hex
EXTRA_FILES_CLEAN += $(EXEC).bin


#############################################################################
# KERNEL FILE LIST
#############################################################################

SOURCES += tpl_os_kernel.c
SOURCES += tpl_os_timeobj_kernel.c
SOURCES += tpl_os_action.c
SOURCES += tpl_os_error.c

#############################################################################
# SYSTEM CALL FILE LIST
#############################################################################

SOURCES += tpl_os_os_kernel.c
SOURCES += tpl_os_os.c
SOURCES += tpl_os_interrupt_kernel.c
SOURCES += tpl_os_task_kernel.c
SOURCES += tpl_os_resource_kernel.c
SOURCES += tpl_os_alarm_kernel.c

#############################################################################
# call Trampoline makefile rules.
#############################################################################

# Call main Trampoline Makefile
OS_MAKE_PATH = $(TPL_BASE_PATH)/make
include $(OS_MAKE_PATH)/Makefile

# vim:ft=make
